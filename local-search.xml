<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用css禁用点击事件</title>
    <link href="/2019/11/20/%E4%BD%BF%E7%94%A8css%E7%A6%81%E7%94%A8%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/"/>
    <url>/2019/11/20/%E4%BD%BF%E7%94%A8css%E7%A6%81%E7%94%A8%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>js阻止默认行为：<code>event.preventDefault()</code> 或 <code>return false</code><br>Js阻止事件冒泡： <code>evnet.stopPropagation()</code> 或  <code>e.cancelBubble = true</code> （IE）</p><h1 id="使用css禁用点击事件"><a href="#使用css禁用点击事件" class="headerlink" title="使用css禁用点击事件"></a>使用css禁用点击事件</h1><p>&amp;emsp;&amp;emsp;在css中有很多实用但平常不常用的属性，比如今天要说的 <code>pointer-events</code>属性。这个css属性的作用就是控制标签的事件是否可用，如果在css里面把标签的这个属性值改为none，那么这个标签就失去了任何的事件，也就做到了禁用点击事件的效果，即使在js里面已经绑定过事件也是不可点击的。</p><h3 id="pointer-events-的作用："><a href="#pointer-events-的作用：" class="headerlink" title="pointer-events 的作用："></a>pointer-events 的作用：</h3><p>1 阻止用户的点击动作产生任何效果</p><p>2 阻止缺省鼠标指针的显示</p><p>3 阻止CSS里的hover和active状态的变化触发事件</p><p>4 阻止JavaScript点击动作触发的事件</p><p>示例： </p><pre><code class="hljs">    .disabled &#123;        pointer-events: none;        cursor: default;        opacity: 0.6;    &#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue-cli3 项目使用postcss-pxtorem解决移动端适配的问题</title>
    <link href="/2019/11/18/postcss-pxtorem/"/>
    <url>/2019/11/18/postcss-pxtorem/</url>
    
    <content type="html"><![CDATA[<h2 id="一-项目中引入lib-flexible"><a href="#一-项目中引入lib-flexible" class="headerlink" title="一. 项目中引入lib-flexible"></a>一. 项目中引入lib-flexible</h2><p>lib-flexible 会自动在html的head中添加一个meta name&#x3D;”viewport”的标签，同时会自动设置html的font-size为屏幕宽度除以10，也就是1rem等于html根节点的font-size。假如设计稿的宽度是750px，此时1rem应该等于75px。假如量的某个元素的宽度是150px，那么在css里面定义这个元素的宽度就是 width: 2rem。</p><ol><li><p>安装 lib-flexible </p><pre><code class="hljs"> npm install lib-flexible --save</code></pre></li><li><p>在 main.js 中引入</p><pre><code class="hljs"> import &quot;lib-flexible&quot;;</code></pre></li></ol><h2 id="二-项目中引入-postcss-pxtorem"><a href="#二-项目中引入-postcss-pxtorem" class="headerlink" title="二. 项目中引入 postcss-pxtorem"></a>二. 项目中引入 postcss-pxtorem</h2><p>postcss-pxtorem: postcss的一个插件，主要是帮你把px转换成对应的rem；<br>然后：还要用js代码去动态算根目录应该有的字体大小，反正就是一段js代码去动态获取屏幕宽度！</p><ol><li><p>安装 postcss-pxtorem</p><pre><code class="hljs"> npm install postcss-pxtorem -D </code></pre></li><li><p>在vue.config.js 中配置 </p><p> 首先引入 postcss-pxtorem  </p><pre><code class="hljs"> const pxtorem = require(&quot;postcss-pxtorem&quot;);</code></pre><p> 然后在module.exports.loaderOptions.postcss.plugins里面增加以下内容</p><pre><code class="hljs"> pxtorem(&#123;   rootValue: 37.5,   propList: [&quot;*&quot;] &#125;)</code></pre></li></ol><p> 好了，现在从F12控制台审查元素看一下你的px有没有自动转换为rem，如果单位是rem说明成功了。    </p>]]></content>
    
    
    <categories>
      
      <category>web前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>移动端适配</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
